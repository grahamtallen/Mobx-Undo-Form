{"version":3,"sources":["StoreCombiner.js"],"names":[],"mappings":";;;;;;;;;AAGA,0BAAkE,AAClE,mCAA8B,2CAC9B,8BAAuB,6CAEvB,2CAA8D,AAE9D,uCAAsC;AACtC,sCAAqC;;AAE/B,WAAW;;;;AAIb,sBAAc;;AAEV,IAAI,CAAC,MAAM,CAAG,8CAAoB,CAAC;;AAE9B,OAAO,CAAI,IAAI,CAAC,MAAM,CAAtB,OAAO;;AAEZ,mBAAS,kBAAM,MAAK,QAAQ,CAAA,CAAE,IAAI,CAAC,mBAAmB,CAAC;;;AAAC;AAIxD,mBAAS,kBAAM,MAAK,QAAQ,CAAA,CAAE,kBAAM,MAAK,aAAa,EAAE,CAAA,CAAC,CAAC,AAC7D;;;;;;;;;;;;;;;;;;AAiBY;AAC8B,IAAI,CAAC,MAAM,CAA7C,SAAS,SAAT,SAAS,CAAE,OAAO,SAAP,OAAO,CAAE,UAAU,SAAV,UAAU;AACnC,IAAI,YAAY,CAAG,SAAS,CAAC,SAAS,CAAC,MAAM,CAAG,CAAC,EAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5E,GAAI,YAAY,CAAE;AACd,OAAO,CAAC,GAAG,CAAC,YAAY,CAAE,YAAY,CAAC,CAAC;AACxC,OAAO,CAAC,cAAc,CAAG,KAAK,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AACvC,IAAI,CAAC,MAAM,CAAG,4BAAc,YAAY,CAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACvD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAE,WAAW,CAAC,CAAC;AAClD,SAAS,CAAC,WAAW,EAAE,CAAC;AACxB,OAAO,CAAC,cAAc,CAAG,IAAI,CAAC,AACjC;;AACI,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA,AAEzC;;;;;AAGO;AACuB,IAAI,CAAC,MAAM,CAAjC,SAAS,UAAT,SAAS,CAAE,OAAO,UAAP,OAAO;AACvB,SAAS,CAAC,WAAW,CAAG,gBAAI,cAAc,EAAE;AAAC,AAC7C,OAAO,CAAC,QAAQ,CAAG,IAAI,CAAC,AAC3B;;;;AAGQ;AAC6C,IAAI,CAAC,MAAM,CAAxD,SAAS,UAAT,SAAS,CAAE,OAAO,UAAP,OAAO,CAAE,UAAU,UAAV,UAAU,CAAE,SAAS,UAAT,SAAS;AAC9C,SAAS,CAAC,WAAW,CAAG,EAAE;AAAC,AAC3B,OAAO,CAAC,QAAQ,CAAG,KAAK,CAAC,AAC5B;;;;AAGa;AACL,UAAU,CAAI,IAAI,CAAC,MAAM,CAAzB,UAAU;;CAGlB;;;;;;;;;;;;;;AAae;AACe,IAAI,CAAC,MAAM,CAAjC,SAAS,UAAT,SAAS,CAAE,OAAO,UAAP,OAAO;AACvB,GAAI,SAAS,CAAC,SAAS,CAAC,MAAM,GAAK,CAAC,CAAE;AAClC,OAAO,CAAC,WAAW,CAAG,KAAK,CAAC,AAC/B;AAAM;AACH,OAAO,CAAC,WAAW,CAAG,IAAI,CAAC,AAC9B,CACJ,kCAjBY,cACoB,IAAI,CAAC,MAAM,CAAnC,SAAS,UAAT,SAAS,CAAE,SAAS,UAAT,SAAS,CACzB,GAAI,SAAS,CAAC,WAAW,CAAC,IAAI,CAAE,CAC5B,OAAO,SAAS,CAAC,WAAW,CAAG,IAAI,CAAG,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,AACpE,KAAM,CACH,OAAO,IAAI,CAAA,AACd,CACJ;;;;;AAamB;AACW,IAAI,CAAC,MAAM,CAAjC,OAAO,UAAP,OAAO,CAAE,SAAS,UAAT,SAAS;AACvB,OAAO,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,SAAA,IAAI,SAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA,CAAC,CAAA,AAChF;;;;AAGc;AACX,OAAO,4BAAc,IAAI,CAAC,MAAM,CAAC,CAAA,AACpC,6IAhFD,mBAAmB,CAAG,iBAAO,QAAQ,0JACN,OAAK,MAAM,CAAjC,SAAS,UAAT,SAAS,CAAE,OAAO,UAAP,OAAO,CACvB,GAAI,QAAQ,EAAI,OAAO,CAAC,cAAc,CAAE,CACpC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,AACjC,OAAO,CAAC,WAAW,CAAG,IAAI,CAAC,AAC3B,UAAU,CAAC,UAAM;CAEhB,CAAE,KAAK,CAAC,CAAA,AACZ,KAAM,CACH,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA,AACpC,0DAEJ,wJA5BoB,EAAE;;;;AAoGZ,IAAI,WAAW,EAAE","file":"StoreCombiner-compiled.js","sourcesContent":["/**\n * Created by grahamallen on 1/27/17.\n */\nimport {observable, computed, action, reaction, when } from 'mobx'\nimport Api from '../api/index'\nimport _ from 'lodash';\n//import {UiStore, ColorStore, UserStore, WordStore, UndoStore, NumberStore} from './substores/'\nimport {snapshotModel, resetSnapshot} from './models/Snapshot'\n//import {login, logout} from '../loginreducers.js'\nimport {subStores} from './substores/'\nimport {mapStores} from './MobxUtils'\n\nclass GlobalStore {\n\n    @observable stores = {};\n\n    constructor() {\n        //alert(typeof subStores.ColorStore);\n        this.stores = mapStores(subStores);\n\n        var {UiStore} = this.stores;\n\n        reaction(() => this.snapshot, this.pushSnapshotAndSave);\n\n        //when(() => UiStore.loggedIn, this.displayUser);\n\n        reaction(() => this.snapshot, () => this.calculateUndo());\n    }\n\n\n    pushSnapshotAndSave = async (snapshot) => {\n        let {UndoStore, UiStore} = this.stores;\n        if (snapshot && UiStore.autoSaveDrafts) {\n            UndoStore.pushSnapshot(snapshot);\n            UiStore.displayUndo = true;\n            setTimeout(() => {\n                //Api.saveDraft(snapshot);\n            }, 12000)\n        } else {\n            console.log('no snapshot saved!')\n        }\n\n    }\n\n    resetState() {\n        let {UndoStore, UiStore, ColorStore} = this.stores;\n        let lastSnapshot = UndoStore.snapshots.length > 1 && UndoStore.snapshots[1];\n        if (lastSnapshot) {\n            console.log('resetState', lastSnapshot);\n            UiStore.autoSaveDrafts = false;\n            console.log(lastSnapshot.currentColor);\n            this.stores = resetSnapshot(lastSnapshot, this.stores);\n            console.log(ColorStore.currentColor, 'old Color');\n            UndoStore.popSnapshot();\n            UiStore.autoSaveDrafts = true;\n        }\n        else console.log('undefined lastSnap')\n\n    }\n\n    @action\n    login() {\n        let {UserStore, UiStore} = this.stores;\n        UserStore.currentUser = Api.getCurrentUser();// await\n        UiStore.loggedIn = true;\n    }\n\n    @action\n    logout() {\n        let {UserStore, UiStore, ColorStore, WordStore} = this.stores;\n        UserStore.currentUser = {};// async\n        UiStore.loggedIn = false;\n    }\n\n    @action\n    displayUser() {\n        let {ColorStore} = this.stores;\n        //ColorStore.setColor(2);\n\n    }\n\n    @computed\n    get phrase() {\n        let {UserStore, WordStore} = this.stores;\n        if (UserStore.currentUser.name) {\n            return WordStore.currentWord + \", \" + UserStore.currentUser.name;\n        } else {\n            return null\n        }\n    }\n\n    @action\n    calculateUndo() {\n        let {UndoStore, UiStore} = this.stores;\n        if (UndoStore.snapshots.length === 0) {\n            UiStore.displayUndo = false;\n        } else {\n            UiStore.displayUndo = true;\n        }\n    }\n\n    @computed\n    get searchedUsers() {\n        var {UiStore, UserStore} = this.stores;\n        return UserStore.users.filter(user => user.name.includes(UiStore.searchText))\n    }\n\n    @computed\n    get snapshot() {\n        return snapshotModel(this.stores)\n    }\n}\n\n\nexport default new GlobalStore();"]}